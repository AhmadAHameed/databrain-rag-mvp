"""adding_chunk_metadata

Revision ID: 29e0e8f6dd42
Revises: 750bcd1e35fa
Create Date: 2025-04-13 14:30:47.401638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '29e0e8f6dd42'
down_revision: Union[str, None] = '750bcd1e35fa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chunk_embeddings')
    op.add_column('document_chunks', sa.Column('chunk_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('document_chunks', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False))
    op.add_column('document_chunks', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False))
    op.alter_column('document_chunks', 'content',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('document_chunks', 'document_page',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('document_chunks_uuid_key', 'document_chunks', type_='unique')
    op.create_index('idx_document_chunks_document_page', 'document_chunks', ['document_id', 'document_page'], unique=False)
    op.create_index(op.f('ix_document_chunks_document_id'), 'document_chunks', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_chunks_uuid'), 'document_chunks', ['uuid'], unique=True)
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('documents', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('documents', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('documents', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_index(op.f('ix_document_chunks_uuid'), table_name='document_chunks')
    op.drop_index(op.f('ix_document_chunks_document_id'), table_name='document_chunks')
    op.drop_index('idx_document_chunks_document_page', table_name='document_chunks')
    op.create_unique_constraint('document_chunks_uuid_key', 'document_chunks', ['uuid'])
    op.alter_column('document_chunks', 'document_page',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('document_chunks', 'content',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('document_chunks', 'updated_at')
    op.drop_column('document_chunks', 'created_at')
    op.drop_column('document_chunks', 'chunk_metadata')
    op.create_table('chunk_embeddings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('chunk_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('embedding', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=False),
    sa.Column('embedding_model', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('embedding_provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chunk_id'], ['document_chunks.id'], name='chunk_embeddings_chunk_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='chunk_embeddings_pkey'),
    sa.UniqueConstraint('uuid', name='chunk_embeddings_uuid_key')
    )
    # ### end Alembic commands ###
